image:
  repository: eclipse-mosquitto
  tag: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
nameOverride: ""
fullnameOverride: ""
revisionHistoryLimit: 2
replicas: 1
strategyType: RollingUpdate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 1883
  runAsGroup: 1883
  runAsNonRoot: true
  readOnlyRootFilesystem: false
  capabilities:
    drop:
    - ALL

securityContext:
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999

serviceAccount:
  create: true
  annotations: {}
  labels: {}
  automountServiceAccountToken: false

service:
  annotations:
    prometheus.io/scrape: "false"
    prometheus.io/port: 9100
  labels: {}
  type: ClusterIP
  externalIPs: []
  loadBalancerIP: ""
  externalTrafficPolicy: {}
  loadBalancerSourceRanges: []
  publishNotReadyAddresses: false
  mqttPort:    1883
  mqttsPort:   8883
  metricsPort: 9100
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    annotations:
      prometheus.io/scrape: "false"
      prometheus.io/port: 9100
    labels: {}
    honorLabels: true
    interval:      60s
    selector: {}
    scrapeTimeout: 10s
    scheme: http
    tlsConfig: {}
    relabelings: []
      # - action: replace
      #   regex: ^(.*)$
      #   replacement: $1
      #   separator: ;
      #   sourceLabels:
      #     - __meta_kubernetes_pod_node_name
      #   targetLabel: nodename
    metricRelabelings: []
      # - action: keep
      #   regex: kube_(daemonset|deployment|pod|namespace|node|statefulset).+
      #   sourceLabels:
      #     - __name__
    bearerTokenFile: {}
    # (use long lived access tokens)
    bearerTokenSecret: {}
      # name:
      # key:
      # optional:
livenessProbe:
  enabled: true
  scheme: HTTP
  periodSeconds:       60
  timeoutSeconds:      10
  successThreshold:    1
  failureThreshold:    6
  initialDelaySeconds: 30
readinessProbe:
  enabled: true
  scheme: HTTP
  periodSeconds:       60
  timeoutSeconds:      10
  successThreshold:    1
  failureThreshold:    6
  initialDelaySeconds: 30
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
resources: {}
#   requests:
#     cpu: "1"
#     memory: "256Mi"
#   limits:
#     cpu: "1"
#     memory: "512Mi"
nodeSelector:
  kubernetes.io/hostname: {}
affinity: {}
tolerations: []
persistence:
  enabled: true
  storageClass: local-path
  accessMode: ReadWriteOnce
  size: 2Gi
  annotations: {}

