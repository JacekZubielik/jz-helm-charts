---
image:
  repository: esphome/esphome
  tag: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
nameOverride: ""
fullnameOverride: ""
revisionHistoryLimit: 2
hostNetwork: false
replicas: 1
strategyType: RollingUpdate
serviceAccount:
  create: true
  annotations: {}
  automountServiceAccountToken: false
podAnnotations: {}
podLabels: {}
extraEnv: {}
extraEnvSecrets:
  # This will set ${MQTT_PASSWORD} to the 'password' key from the 'mqtt' secret
  # MQTT_PASSWORD:
  #   secret: mqtt
  #   key: password
## If you'd like to provide your own Kubernetes Secret object instead of passing your values
## individually, pass in the name of a created + populated Secret.
## All secrets will be mounted as environment variables, with each key/value mapping to a
## corresponding environment variable.
extraSecretForEnvFrom: []
# - esphome-secrets
podSecurityContext:
  privileged: false
  # fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  annotations: {}
    # prometheus.io/scrape: "false"
    # prometheus.io/port: {{ .Values.service.metricsPort }}
  labels: {}
  type: ClusterIP
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  publishNotReadyAddresses: false
  externalTrafficPolicy: {}
  httpPort: 6052
  metricsPort: 9100
  additionalPorts: []

monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    labels: {}
    honorLabels: true
    interval: 60s
    selector: {}
    namespace: {}
    scrapeTimeout: 10s
    scheme: http
    tlsConfig: {}
    relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   target_label: nodename
    #   replacement: $1
    #   action: replace
    metricRelabelings: []
    # - action: keep
    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
    #   sourceLabels: [__name__]
    bearerTokenFile: {}
    # (use long lived access tokens)
    bearerTokenSecret: {}
    # name:
    # key:
    # optional:
livenessProbe:
  enabled: true
  # scheme: HTTP
  periodSeconds: 60
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 6
  initialDelaySeconds: 30
readinessProbe:
  enabled: true
  # scheme: HTTP
  periodSeconds: 60
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 6
  initialDelaySeconds: 30
startupProbe:
  enabled: true
  # scheme: HTTP
  successThreshold: 1
  failureThreshold: 6

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /
  hosts:
    - chart-example.local
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
#   requests:
#     cpu: "1"
#     memory: "256Mi"
#   limits:
#     cpu: "1"
#     memory: "512Mi"

nodeSelector: {}
affinity: {}
tolerations: []

persistence:
  enabled: false
  ## esphome data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ##
  ## If you want to use a volume on the host machine instead of a PVC:
  # hostPath: /path/to/the/config/folder
  accessMode: ReadWriteOnce
  size: 1Gi

# Mount devices or folders from the host machine. Can be used for USB device mounting.
hostMounts: []
  # - name: zha
  #   hostPath: /dev/serial/by-id/usb-Silicon_Labs_HubZ_Smart_Home_Controller_6120245D-if01-port0

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  averageCPUUtilizationPercentage: 50
  averageMemoryUtilizationPercentage: 50
